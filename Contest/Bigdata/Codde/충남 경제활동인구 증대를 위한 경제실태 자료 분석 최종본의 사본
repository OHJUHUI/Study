{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":1550,"status":"ok","timestamp":1692103427303,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"TFV3mhcQ0fH4"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2993,"status":"ok","timestamp":1692103430293,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"5vyO_TSV_Egg","outputId":"078c552d-2eee-4290-8f7c-3d1cb39ab253"},"outputs":[{"name":"stdout","output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","fonts-nanum is already the newest version (20200506-1).\n","0 upgraded, 0 newly installed, 0 to remove and 16 not upgraded.\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 12 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}],"source":["# 한글사용\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1692103430294,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"5BLatgeBbldm"},"outputs":[],"source":["plt.rc('font', family='NanumBarunGothic')"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":2043,"status":"ok","timestamp":1692103432334,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"0KGT4KBraASD"},"outputs":[],"source":["# 2016년도 데이터\n","info_201601 = pd.read_csv('/content/KCB_CREDTINFO_201601.csv')\n","info_201602 = pd.read_csv('/content/KCB_CREDTINFO_201602.csv')\n","info_201603 = pd.read_csv('/content/KCB_CREDTINFO_201603.csv')\n","info_201604 = pd.read_csv('/content/KCB_CREDTINFO_201604.csv')\n","info_201605 = pd.read_csv('/content/KCB_CREDTINFO_201605.csv')\n","info_201606 = pd.read_csv('/content/KCB_CREDTINFO_201606.csv')\n","info_201607 = pd.read_csv('/content/KCB_CREDTINFO_201607.csv')\n","info_201608 = pd.read_csv('/content/KCB_CREDTINFO_201608.csv')\n","info_201609 = pd.read_csv('/content/KCB_CREDTINFO_201609.csv')\n","info_201610 = pd.read_csv('/content/KCB_CREDTINFO_201610.csv')\n","info_201611 = pd.read_csv('/content/KCB_CREDTINFO_201611.csv')\n","info_201612 = pd.read_csv('/content/KCB_CREDTINFO_201612.csv')\n","info_2016 = pd.concat([info_201601, info_201602, info_201603, info_201604, info_201605, info_201606, info_201607, info_201608, info_201609, info_201610, info_201611, info_201612])"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":1299,"status":"ok","timestamp":1692103433632,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"LkLVudBBaNua"},"outputs":[],"source":["# 2017년도 데이터\n","info_201701 = pd.read_csv('/content/KCB_CREDTINFO_201701.csv')\n","info_201702 = pd.read_csv('/content/KCB_CREDTINFO_201702.csv')\n","info_201703 = pd.read_csv('/content/KCB_CREDTINFO_201703.csv')\n","info_201704 = pd.read_csv('/content/KCB_CREDTINFO_201704.csv')\n","info_201705 = pd.read_csv('/content/KCB_CREDTINFO_201705.csv')\n","info_201706 = pd.read_csv('/content/KCB_CREDTINFO_201706.csv')\n","info_201707 = pd.read_csv('/content/KCB_CREDTINFO_201707.csv')\n","info_201708 = pd.read_csv('/content/KCB_CREDTINFO_201708.csv')\n","info_201709 = pd.read_csv('/content/KCB_CREDTINFO_201709.csv')\n","info_201710 = pd.read_csv('/content/KCB_CREDTINFO_201710.csv')\n","info_201711 = pd.read_csv('/content/KCB_CREDTINFO_201711.csv')\n","info_201712 = pd.read_csv('/content/KCB_CREDTINFO_201712.csv')\n","info_2017 = pd.concat([info_201701, info_201702, info_201703, info_201704, info_201705, info_201706, info_201707, info_201708, info_201709, info_201710, info_201711, info_201712])"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":2183,"status":"ok","timestamp":1692103435813,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"mGFBaVuRbYHT"},"outputs":[],"source":["# 2018년도 데이터\n","info_201801 = pd.read_csv('/content/KCB_CREDTINFO_201801.csv')\n","info_201802 = pd.read_csv('/content/KCB_CREDTINFO_201802.csv')\n","info_201803 = pd.read_csv('/content/KCB_CREDTINFO_201803.csv')\n","info_201804 = pd.read_csv('/content/KCB_CREDTINFO_201804.csv')\n","info_201805 = pd.read_csv('/content/KCB_CREDTINFO_201805.csv')\n","info_201806 = pd.read_csv('/content/KCB_CREDTINFO_201806.csv')\n","info_201807 = pd.read_csv('/content/KCB_CREDTINFO_201807.csv')\n","info_201808 = pd.read_csv('/content/KCB_CREDTINFO_201808.csv')\n","info_201809 = pd.read_csv('/content/KCB_CREDTINFO_201809.csv')\n","info_201810 = pd.read_csv('/content/KCB_CREDTINFO_201810.csv')\n","info_201811 = pd.read_csv('/content/KCB_CREDTINFO_201811.csv')\n","info_201812 = pd.read_csv('/content/KCB_CREDTINFO_201812.csv')\n","info_2018 = pd.concat([info_201801, info_201802, info_201803, info_201804, info_201805, info_201806, info_201807, info_201808, info_201809, info_201810, info_201811, info_201812])"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":1339,"status":"ok","timestamp":1692103437149,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"},"user_tz":-540},"id":"B3mcgP9Ubrw_"},"outputs":[],"source":["# 2019년도 데이터\n","info_201901 = pd.read_csv('/content/KCB_CREDTINFO_201901.csv')\n","info_201902 = pd.read_csv('/content/KCB_CREDTINFO_201902.csv')\n","info_201903 = pd.read_csv('/content/KCB_CREDTINFO_201903.csv')\n","info_201904 = pd.read_csv('/content/KCB_CREDTINFO_201904.csv')\n","info_201905 = pd.read_csv('/content/KCB_CREDTINFO_201905.csv')\n","info_201906 = pd.read_csv('/content/KCB_CREDTINFO_201906.csv')\n","info_201907 = pd.read_csv('/content/KCB_CREDTINFO_201907.csv')\n","info_201908 = pd.read_csv('/content/KCB_CREDTINFO_201908.csv')\n","info_201909 = pd.read_csv('/content/KCB_CREDTINFO_201909.csv')\n","info_201910 = pd.read_csv('/content/KCB_CREDTINFO_201910.csv')\n","info_201911 = pd.read_csv('/content/KCB_CREDTINFO_201911.csv')\n","info_201912 = pd.read_csv('/content/KCB_CREDTINFO_201912.csv')\n","info_2019 = pd.concat([info_201901, info_201902, info_201903, info_201904, info_201905, info_201906, info_201907, info_201908, info_201909, info_201910, info_201911, info_201912])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EgXVxooPcGov"},"outputs":[],"source":["# 2020년도 데이터\n","info_202001 = pd.read_csv('/content/KCB_CREDTINFO_202001.csv')\n","info_202002 = pd.read_csv('/content/KCB_CREDTINFO_202002.csv')\n","info_202003 = pd.read_csv('/content/KCB_CREDTINFO_202003.csv')\n","info_202004 = pd.read_csv('/content/KCB_CREDTINFO_202004.csv')\n","info_202005 = pd.read_csv('/content/KCB_CREDTINFO_202005.csv')\n","info_202006 = pd.read_csv('/content/KCB_CREDTINFO_202006.csv')\n","info_202007 = pd.read_csv('/content/KCB_CREDTINFO_202007.csv')\n","info_202008 = pd.read_csv('/content/KCB_CREDTINFO_202008.csv')\n","info_202009 = pd.read_csv('/content/KCB_CREDTINFO_202009.csv')\n","info_202010 = pd.read_csv('/content/KCB_CREDTINFO_202010.csv')\n","info_202011 = pd.read_csv('/content/KCB_CREDTINFO_202011.csv')\n","info_202012 = pd.read_csv('/content/KCB_CREDTINFO_202012.csv')\n","info_2020 = pd.concat([info_202001, info_202002, info_202003, info_202004, info_202005, info_202006, info_202007, info_202008, info_202009, info_202010, info_202011, info_202012])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Tm_uGPFUcYaq"},"outputs":[],"source":["# 2021년도 데이터\n","info_202101 = pd.read_csv('/content/KCB_CREDTINFO_202101.csv')\n","info_202102 = pd.read_csv('/content/KCB_CREDTINFO_202102.csv')\n","info_202103 = pd.read_csv('/content/KCB_CREDTINFO_202103.csv')\n","info_202104 = pd.read_csv('/content/KCB_CREDTINFO_202104.csv')\n","info_202105 = pd.read_csv('/content/KCB_CREDTINFO_202105.csv')\n","info_202106 = pd.read_csv('/content/KCB_CREDTINFO_202106.csv')\n","info_202107 = pd.read_csv('/content/KCB_CREDTINFO_202107.csv')\n","info_202108 = pd.read_csv('/content/KCB_CREDTINFO_202108.csv')\n","info_202109 = pd.read_csv('/content/KCB_CREDTINFO_202109.csv')\n","info_202110 = pd.read_csv('/content/KCB_CREDTINFO_202110.csv')\n","info_202111 = pd.read_csv('/content/KCB_CREDTINFO_202111.csv')\n","info_202112 = pd.read_csv('/content/KCB_CREDTINFO_202112.csv')\n","info_2021 = pd.concat([info_202101, info_202102, info_202103, info_202104, info_202105, info_202106, info_202107, info_202108, info_202109, info_202110, info_202111, info_202112])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5nM3ERa6cnet"},"outputs":[],"source":["# 2022년도 데이터\n","info_202201 = pd.read_csv('/content/KCB_CREDTINFO_202201.csv')\n","info_202202 = pd.read_csv('/content/KCB_CREDTINFO_202202.csv')\n","info_202203 = pd.read_csv('/content/KCB_CREDTINFO_202203.csv')\n","info_202204 = pd.read_csv('/content/KCB_CREDTINFO_202204.csv')\n","info_202205 = pd.read_csv('/content/KCB_CREDTINFO_202205.csv')\n","info_202206 = pd.read_csv('/content/KCB_CREDTINFO_202206.csv')\n","info_202207 = pd.read_csv('/content/KCB_CREDTINFO_202207.csv')\n","info_202208 = pd.read_csv('/content/KCB_CREDTINFO_202208.csv')\n","info_202209 = pd.read_csv('/content/KCB_CREDTINFO_202209.csv')\n","info_202210 = pd.read_csv('/content/KCB_CREDTINFO_202210.csv')\n","info_202211 = pd.read_csv('/content/KCB_CREDTINFO_202211.csv')\n","info_202212 = pd.read_csv('/content/KCB_CREDTINFO_202212.csv')\n","info_2022 = pd.concat([info_202201, info_202202, info_202203, info_202204, info_202205, info_202206, info_202207, info_202208, info_202209, info_202210, info_202211, info_202212])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"m_3vuX6Oc4nG"},"outputs":[],"source":["# 2023년도 데이터\n","info_202301 = pd.read_csv('/content/KCB_CREDTINFO_202301.csv')\n","info_202302 = pd.read_csv('/content/KCB_CREDTINFO_202302.csv')\n","info_202303 = pd.read_csv('/content/KCB_CREDTINFO_202303.csv')\n","info_202304 = pd.read_csv('/content/KCB_CREDTINFO_202304.csv')\n","info_2023 = pd.concat([info_202301, info_202302, info_202303, info_202304])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"fbD4CxfJddGN"},"outputs":[],"source":["# 2016-2023 데이터 결합\n","info = pd.concat([info_2016, info_2017, info_2018, info_2019, info_2020, info_2021, info_2022, info_2023])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ThcDxD_8_h1Y"},"outputs":[],"source":["# 행정동 코드 추가 데이터(충남 데이터만 추출하기 위해)\n","dong = pd.read_csv('/content/행정동 코드.csv')"]},{"cell_type":"markdown","metadata":{"id":"_r_Rg78UDTLn"},"source":["###info 데이터에서 충남 데이터만 추출"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2X9J11ikXRuj"},"outputs":[],"source":["# 2016년도 충남 데이터\n","\n","# 필터링을 위해 일치하는 행정동 코드 추출\n","dong_codes = dong['행정동코드'].tolist()\n","# 일치하는 데이터만 추출하여 새로운 데이터 프레임 생성\n","info_2016_data  = info_2016[info_2016['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RH_Qf-SyD491"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2016_data['AGE_DVS'] = info_2016_data['AGE_DVS'].replace(age_dvs_mapping)\n","\n","print(info_2016_data['AGE_DVS'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DKrFGWJcBc5d"},"outputs":[],"source":["# 연령대별 인구수 파악(2016년 실제 인구수)\n","info_2016_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PyRuY1WUIJ7o"},"outputs":[],"source":["#age_grouped_2016 = info_2016_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2016.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2016년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cAWcR2HxYw10"},"outputs":[],"source":["# 2017년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2017_data  = info_2017[info_2017['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QdB7IWSXCZx6"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2017_data['AGE_DVS'] = info_2017_data['AGE_DVS'].replace(age_dvs_mapping)\n","\n","print(info_2017_data['AGE_DVS'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QrnPos1uDmwe"},"outputs":[],"source":["info_2017_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BpkQAFnqDkrS"},"outputs":[],"source":["#age_grouped_2017 = info_2017_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2017.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2017년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RkaWR5SUXR0F"},"outputs":[],"source":["# 2018년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2018_data  = info_2018[info_2018['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"10Da3aZRCahJ"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2018_data['AGE_DVS'] = info_2018_data['AGE_DVS'].replace(age_dvs_mapping)\n","\n","print(info_2018_data['AGE_DVS'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CcrNAKIQFe-R"},"outputs":[],"source":["info_2018_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_9pWwDAGICYT"},"outputs":[],"source":["#age_grouped_2018 = info_2018_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2018.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2018년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Kfd7ufTLXuZ8"},"outputs":[],"source":["# 2019년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2019_data  = info_2019[info_2019['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EXjlf8v-CbJ2"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2019_data['AGE_DVS'] = info_2019_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bgy2Mo5PEhtu"},"outputs":[],"source":["info_2019_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AN4vahnNH5gp"},"outputs":[],"source":["#age_grouped_2019 = info_2019_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2019.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2019년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eA35JK6LXudM"},"outputs":[],"source":["# 2020년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2020_data  = info_2020[info_2020['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vt19zQ7uCb0O"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2020_data['AGE_DVS'] = info_2020_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xb3rnIU7EliJ"},"outputs":[],"source":["info_2020_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cMjgE9rIH0ot"},"outputs":[],"source":["#age_grouped_2020 = info_2020_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2020.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2020년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qdZ-xV49XR51"},"outputs":[],"source":["# 2021년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2021_data  = info_2021[info_2021['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hIKcsGccCckg"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2021_data['AGE_DVS'] = info_2021_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bMSImpt8EqV2"},"outputs":[],"source":["info_2021_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h0Luo1xTHuF3"},"outputs":[],"source":["#age_grouped_2021 = info_2021_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2021.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2021년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PHXD9S5aYqOh"},"outputs":[],"source":["# 2022년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2022_data  = info_2022[info_2022['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FdgQ5RRtCdY5"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2022_data['AGE_DVS'] = info_2022_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VWT7zkimEuX7"},"outputs":[],"source":["info_2022_data['AGE_DVS'].value_counts().div(12)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JRXehqwQHnNY"},"outputs":[],"source":["# age_grouped_2022 = info_2022_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2022.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2022년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YLTbAdK2YqL6"},"outputs":[],"source":["# 2023년도 충남 데이터\n","dong_codes = dong['행정동코드'].tolist()\n","info_2023_data  = info_2023[info_2023['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hhLPOyniCeNf"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_2023_data['AGE_DVS'] = info_2023_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5lyAATZ-EwZa"},"outputs":[],"source":["info_2023_data['AGE_DVS'].value_counts().div(4)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zk8ZnC1QHb6w"},"outputs":[],"source":["#age_grouped_2023 = info_2023_data.groupby('AGE_DVS').size()\n","\n","#age_grouped_2023.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2023년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9IcrUy2dOCye"},"outputs":[],"source":["# 2016~2023년 충남 데이터 추출\n","dong_codes = dong['행정동코드'].tolist()\n","info_data  = info[info['DONG_CD'].isin(dong_codes)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xYsXmJGDEOnw"},"outputs":[],"source":["# 10세 단위로 연령 값 변경\n","age_dvs_mapping = {21: 20, 22: 20, 31: 30, 32: 30, 41: 40, 42: 40, 51: 50, 52: 50, 61: 60, 62: 60}\n","\n","info_data['AGE_DVS'] = info_data['AGE_DVS'].replace(age_dvs_mapping)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GtlsIpfT0IS9"},"outputs":[],"source":["info_data['AGE_DVS'].value_counts().div(88)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nFZZVazRnehM"},"outputs":[],"source":["#age_grouped = info_data.groupby('AGE_DVS').size()\n","\n","#age_grouped.plot(kind='pie', autopct='%1.2f%%', startangle=90)\n","#plt.title(\"2016~2023년도 연령대별 비율\")\n","#plt.axis('equal')\n","#plt.show()"]},{"cell_type":"markdown","metadata":{"id":"7U5BooTqjAr-"},"source":["# 연령구간 별 년도별 평균 소득, 중위 월 소득 분석 AGE_DVS 기준 SUM\n","\n","###(MM_INCM*NOPE)/SUM(NOPE), 각 열의 MID_INCM를 NOPE 만큼 나열한 값들의 중앙값  \n"]},{"cell_type":"markdown","metadata":{"id":"g3lTfSg4jUVi"},"source":["## 2016년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bIK9G9ZAEOw4"},"outputs":[],"source":["info_2016_data['AGE_GRP'] = info_2016_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2016_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2016년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3U3K36l2EgB5"},"outputs":[],"source":["info_2016_data['AGE_GRP'] = info_2016_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2016_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2016년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"mEUgZs2ljjLr"},"source":["## 2017년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JIrJd9IlFQe8"},"outputs":[],"source":["info_2017_data['AGE_GRP'] = info_2017_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2017_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2017년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9XNTr-4eFdZq"},"outputs":[],"source":["info_2017_data['AGE_GRP'] = info_2017_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2017_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2017년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"DFbizwzrj2-W"},"source":["## 2018년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7_r5vK9HFqVj"},"outputs":[],"source":["info_2018_data['AGE_GRP'] = info_2018_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2018_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2018년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xSvl-APjkMh4"},"outputs":[],"source":["info_2018_data['AGE_GRP'] = info_2018_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2018_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2018년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"uTT0CEzAj5Fm"},"source":["## 2019년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h16Q1Dy_Fu08"},"outputs":[],"source":["info_2019_data['AGE_GRP'] = info_2019_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2019_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2019년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nyZ02SulkSBN"},"outputs":[],"source":["info_2019_data['AGE_GRP'] = info_2019_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2019_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2019년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"ltfSu57Aj7Cx"},"source":["## 2020년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QdIBN5TWF_BQ"},"outputs":[],"source":["info_2020_data['AGE_GRP'] = info_2020_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2020_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2020년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ytfa53svj8Ef"},"outputs":[],"source":["info_2020_data['AGE_GRP'] = info_2020_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2020_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2020년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"GpAVcXPVj8e1"},"source":["## 2021년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8A94cSiyGEjj"},"outputs":[],"source":["info_2021_data['AGE_GRP'] = info_2021_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2021_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2021년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oIPi9R53j9qK"},"outputs":[],"source":["info_2021_data['AGE_GRP'] = info_2021_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2021_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2021년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"AVn_dr4Tj-LY"},"source":["## 2022년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bOIGgpL1kYPk"},"outputs":[],"source":["info_2022_data['AGE_GRP'] = info_2022_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2022_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2022년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eoj9Ai4vkAl5"},"outputs":[],"source":["info_2022_data['AGE_GRP'] = info_2022_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2022_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2022년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"fA8i1lt5kBBg"},"source":["## 2023년도 연령구간별 평균소득/ 연령구간별 중위 월소득 분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lWGs0l3gkY7m"},"outputs":[],"source":["info_2023_data['AGE_GRP'] = info_2023_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2023_data.groupby('AGE_GRP')['MM_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('월소득 평균(단위 : 천원)')\n","plt.title('2023년도 연령별 월소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d1t0iS7DkCKc"},"outputs":[],"source":["info_2023_data['AGE_GRP'] = info_2023_data['AGE_DVS'] // 10 * 10\n","df_grouped = info_2023_data.groupby('AGE_GRP')['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(df_grouped.index, df_grouped.values)\n","plt.xlabel('연령')\n","plt.ylabel('중위소득 평균(단위 : 천원)')\n","plt.title('2023년도 연령별 중위소득 평균')\n","plt.xticks(df_grouped.index)\n","# Y축 범위 설정\n","plt.ylim(0, 4000)\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for bar in bars:\n","    yval = bar.get_height()\n","    plt.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom', color='black', fontsize=9)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"x120Ed1K84Ud"},"source":["## 20대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EQ02zi7WDG4a"},"outputs":[],"source":["info_2017_data['CRTR_YM'] = pd.to_datetime(info_2017_data['CRTR_YM'], format='%Y%m')\n","info_2017_data['Year'] = info_2017_data['CRTR_YM'].dt.year"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5dyoxbpb-kj9"},"outputs":[],"source":["#년도 추출\n","info_data['CRTR_YM'] = pd.to_datetime(info_data['CRTR_YM'], format='%Y%m')\n","info_data['Year'] = info_data['CRTR_YM'].dt.year\n","\n","print(info_data['Year'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hmvmNkuQCNLJ"},"outputs":[],"source":["info_data['Year'] = info_data['Year'].astype(int)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qmVybX9S-kmV"},"outputs":[],"source":["# 20대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_20s = info_data[info_data['AGE_DVS'] == 20]\n","\n","MM_INCM_age_year_20s = info_data_20s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_20s = info_data_20s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_20s.index, MM_INCM_age_year_20s.values, marker='o', linestyle='-', label='20대 평균소득')\n","plt.plot(MID_INCM_age_year_20s.index, MID_INCM_age_year_20s.values, marker='o', linestyle='-', label='20대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('20대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"iP7xP5m_1-rq"},"source":["## 30대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y48eKSwh2K--"},"outputs":[],"source":["# 30대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_30s = info_data[info_data['AGE_DVS'] == 30]\n","\n","MM_INCM_age_year_30s = info_data_30s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_30s = info_data_30s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_30s.index, MM_INCM_age_year_30s.values, marker='o', linestyle='-', label='30대 평균소득')\n","plt.plot(MID_INCM_age_year_30s.index, MID_INCM_age_year_30s.values, marker='o', linestyle='-', label='30대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('30대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"veeTczGv2Bnp"},"source":["## 40대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tzctR6tJ2SPu"},"outputs":[],"source":["# 40대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_40s = info_data[info_data['AGE_DVS'] == 40]\n","\n","MM_INCM_age_year_40s = info_data_40s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_40s = info_data_40s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_40s.index, MM_INCM_age_year_40s.values, marker='o', linestyle='-', label='40대 평균소득')\n","plt.plot(MID_INCM_age_year_40s.index, MID_INCM_age_year_40s.values, marker='o', linestyle='-', label='40대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('40대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"7M5alZ0x2DmV"},"source":["## 50대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jA9fAHD72VKH"},"outputs":[],"source":["# 50대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_50s = info_data[info_data['AGE_DVS'] == 50]\n","\n","MM_INCM_age_year_50s = info_data_50s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_50s = info_data_50s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_50s.index, MM_INCM_age_year_50s.values, marker='o', linestyle='-', label='50대 평균소득')\n","plt.plot(MID_INCM_age_year_50s.index, MID_INCM_age_year_50s.values, marker='o', linestyle='-', label='50대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('50대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"kNYf9cuu2Ez6"},"source":["## 60대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_nen-Ymj2VwX"},"outputs":[],"source":["# 60대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_60s = info_data[info_data['AGE_DVS'] == 60]\n","\n","MM_INCM_age_year_60s = info_data_60s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_60s = info_data_60s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_60s.index, MM_INCM_age_year_60s.values, marker='o', linestyle='-', label='60대 평균소득')\n","plt.plot(MID_INCM_age_year_60s.index, MID_INCM_age_year_60s.values, marker='o', linestyle='-', label='60대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('60대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"sMtB52tg2F-j"},"source":["## 70대 월평균/중위 소득"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uUarGNVT2Wbg"},"outputs":[],"source":["# 70대 월평균/중위 소득\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_data_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","MM_INCM_age_year_70s = info_data_70s.groupby(['Year'])['MM_INCM'].mean()\n","MID_INCM_age_year_70s = info_data_70s.groupby(['Year'])['MID_INCM'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(MM_INCM_age_year_70s.index, MM_INCM_age_year_70s.values, marker='o', linestyle='-', label='70대 평균소득')\n","plt.plot(MID_INCM_age_year_70s.index, MID_INCM_age_year_70s.values, marker='o', linestyle='-', label='70대 중위소득')\n","plt.xlabel('연도')\n","plt.ylabel('소득')\n","plt.title('70대 평균/중위 소득')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zZLbSTBgqHKa"},"outputs":[],"source":["# 2016-2023 각 년도별 연령 별 평균소득 그래프 확인\n","\n","data_20s = info_data[info_data['AGE_DVS'] == 20]\n","data_30s = info_data[info_data['AGE_DVS'] == 30]\n","data_40s = info_data[info_data['AGE_DVS'] == 40]\n","data_50s = info_data[info_data['AGE_DVS'] == 50]\n","data_60s = info_data[info_data['AGE_DVS'] == 60]\n","data_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","lng_ovdu_count_age_year_20s = data_20s.groupby(['Year'])['MM_INCM'].mean()\n","lng_ovdu_count_age_year_30s = data_30s.groupby(['Year'])['MM_INCM'].mean()\n","lng_ovdu_count_age_year_40s = data_40s.groupby(['Year'])['MM_INCM'].mean()\n","lng_ovdu_count_age_year_50s = data_50s.groupby(['Year'])['MM_INCM'].mean()\n","lng_ovdu_count_age_year_60s = data_60s.groupby(['Year'])['MM_INCM'].mean()\n","lng_ovdu_count_age_year_70s = data_70s.groupby(['Year'])['MM_INCM'].mean()\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(lng_ovdu_count_age_year_20s.index, lng_ovdu_count_age_year_20s.values, marker='o', linestyle='-', label='20대 평균소득')\n","plt.plot(lng_ovdu_count_age_year_30s.index, lng_ovdu_count_age_year_30s.values, marker='o', linestyle='-', label='30대 평균소득')\n","plt.plot(lng_ovdu_count_age_year_40s.index, lng_ovdu_count_age_year_40s.values, marker='o', linestyle='-', label='40대 평균소득')\n","plt.plot(lng_ovdu_count_age_year_50s.index, lng_ovdu_count_age_year_50s.values, marker='o', linestyle='-', label='50대 평균소득')\n","plt.plot(lng_ovdu_count_age_year_60s.index, lng_ovdu_count_age_year_60s.values, marker='o', linestyle='-', label='60대 평균소득')\n","plt.plot(lng_ovdu_count_age_year_70s.index, lng_ovdu_count_age_year_70s.values, marker='o', linestyle='-', label='70대 평균소득')\n","\n","plt.xlabel('년도')\n","plt.ylabel('평균소득 금')\n","plt.title('년도별 연령대의 평균소득')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uunMTWL6qSpn"},"outputs":[],"source":["# 2016-2023 각 년도별 생애주기 별 평균소득 그래프 확인\n","\n","\n","young_age = info_data[info_data['AGE_DVS'] == 20]\n","middle_age = info_data[(info_data['AGE_DVS'] == 30) | (info_data['AGE_DVS'] == 40)]\n","seniors_age = info_data[(info_data['AGE_DVS'] == 50) | (info_data['AGE_DVS'] == 60)]\n","older_age = info_data[info_data['AGE_DVS'] == 70]\n","\n","young_age_year = young_age.groupby(['Year'])['MM_INCM'].mean()\n","middle_age_year = middle_age.groupby(['Year'])['MM_INCM'].mean()\n","seniors_age_year = seniors_age.groupby(['Year'])['MM_INCM'].mean()\n","older_age_year = older_age.groupby(['Year'])['MM_INCM'].mean()\n","\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(young_age_year.index, young_age_year.values, marker='o', linestyle='-', label='청년층 평균소득')\n","plt.plot(middle_age_year.index, middle_age_year.values, marker='o', linestyle='-', label='중년층 평균소득')\n","plt.plot(seniors_age_year.index, seniors_age_year.values, marker='o', linestyle='-', label='장년층 평균소득')\n","plt.plot(older_age_year.index, older_age_year.values, marker='o', linestyle='-', label='노년층 평균소득')\n","\n","\n","plt.xlabel('년도')\n","plt.ylabel('평균소득 금액')\n","plt.title('년도별 생애주기 별 평균소득')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ux96zkM9Br77"},"outputs":[],"source":["# 2016-2023 각 년도별 연령 별 중위소득 그래프 확인\n","\n","data_20s = info_data[info_data['AGE_DVS'] == 20]\n","data_30s = info_data[info_data['AGE_DVS'] == 30]\n","data_40s = info_data[info_data['AGE_DVS'] == 40]\n","data_50s = info_data[info_data['AGE_DVS'] == 50]\n","data_60s = info_data[info_data['AGE_DVS'] == 60]\n","data_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","lng_ovdu_count_age_year_20s = data_20s.groupby(['Year'])['MID_INCM'].mean()\n","lng_ovdu_count_age_year_30s = data_30s.groupby(['Year'])['MID_INCM'].mean()\n","lng_ovdu_count_age_year_40s = data_40s.groupby(['Year'])['MID_INCM'].mean()\n","lng_ovdu_count_age_year_50s = data_50s.groupby(['Year'])['MID_INCM'].mean()\n","lng_ovdu_count_age_year_60s = data_60s.groupby(['Year'])['MID_INCM'].mean()\n","lng_ovdu_count_age_year_70s = data_70s.groupby(['Year'])['MID_INCM'].mean()\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(lng_ovdu_count_age_year_20s.index, lng_ovdu_count_age_year_20s.values, marker='o', linestyle='-', label='20대 중위소득금액')\n","plt.plot(lng_ovdu_count_age_year_30s.index, lng_ovdu_count_age_year_30s.values, marker='o', linestyle='-', label='30대 중위소득금액')\n","plt.plot(lng_ovdu_count_age_year_40s.index, lng_ovdu_count_age_year_40s.values, marker='o', linestyle='-', label='40대 중위소득금액')\n","plt.plot(lng_ovdu_count_age_year_50s.index, lng_ovdu_count_age_year_50s.values, marker='o', linestyle='-', label='50대 중위소득금액')\n","plt.plot(lng_ovdu_count_age_year_60s.index, lng_ovdu_count_age_year_60s.values, marker='o', linestyle='-', label='60대 중위소득금액')\n","plt.plot(lng_ovdu_count_age_year_70s.index, lng_ovdu_count_age_year_70s.values, marker='o', linestyle='-', label='70대 중위소득금액')\n","\n","plt.xlabel('년도')\n","plt.ylabel('중위소득금액')\n","plt.title('년도별 연령대의 중위소득금액')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WVcYd9avqizs"},"outputs":[],"source":["# 2016-2023 각 년도별 생애주기 별 중위소득 그래프 확인\n","\n","\n","young_age = info_data[info_data['AGE_DVS'] == 20]\n","middle_age = info_data[(info_data['AGE_DVS'] == 30) | (info_data['AGE_DVS'] == 40)]\n","seniors_age = info_data[(info_data['AGE_DVS'] == 50) | (info_data['AGE_DVS'] == 60)]\n","older_age = info_data[info_data['AGE_DVS'] == 70]\n","\n","young_age_year = young_age.groupby(['Year'])['MID_INCM'].mean()\n","middle_age_year = middle_age.groupby(['Year'])['MID_INCM'].mean()\n","seniors_age_year = seniors_age.groupby(['Year'])['MID_INCM'].mean()\n","older_age_year = older_age.groupby(['Year'])['MID_INCM'].mean()\n","\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(young_age_year.index, young_age_year.values, marker='o', linestyle='-', label='청년층 중위소득')\n","plt.plot(middle_age_year.index, middle_age_year.values, marker='o', linestyle='-', label='중년층 중위소득')\n","plt.plot(seniors_age_year.index, seniors_age_year.values, marker='o', linestyle='-', label='장년층 중위소득')\n","plt.plot(older_age_year.index, older_age_year.values, marker='o', linestyle='-', label='노년층 중위소득')\n","\n","\n","plt.xlabel('년도')\n","plt.ylabel('중위소득 금액')\n","plt.title('년도별 생애주기 별 중위소득')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"1sK9s3tplbiJ"},"source":["# 연령 구간 별 평균 총 자산 분석\n","### AGE_DVS 기준 OWRNS_HOUSE_EVL_GRAMT_AVG + CAR_OALP_AVG"]},{"cell_type":"markdown","metadata":{"id":"QrhcKfVjmDJ3"},"source":["## 2016년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YG0YwQeRJBCL"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2016_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2016_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2016년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"3i7MCS9DmRwB"},"source":["## 2017년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M0C9YFTglg4n"},"outputs":[],"source":["info_2017_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2017_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2017년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"zGWOGsYomUsX"},"source":["## 2018년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t49GLJ65mirP"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2018_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2018_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2018년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"_-looIL8mV0B"},"source":["## 2019년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vNDjljUjmjiK"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2019_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2019_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2019년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"zdcHPeZ-mXZP"},"source":["## 2020년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TWF2yIX0mkNa"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2020_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2020_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2020년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"EdNmrbcSmZFo"},"source":["## 2021년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UQadjoGgmls9"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2021_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2021_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2021년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"cP8edIgLmaww"},"source":["## 2022년도 연령별 총 자산분석\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PSrlnimnmman"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2022_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2022_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2022년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"idkUmpr6ma2B"},"source":["## 2023년도 연령별 총 자산분석"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gliVQq9Smnzs"},"outputs":[],"source":["income_cols = ['OWRNS_HOUSE_EVL_GRAMT_AVG', 'CAR_OALP_AVG']\n","\n","info_2023_data.dropna(subset=income_cols, inplace=True)\n","\n","average_income_by_age_group = info_2023_data.groupby(['AGE_DVS']).mean()\n","\n","# 사용자 정의 막대 그래프 이름 리스트\n","column_names = ['자가보유 수', '자차보유 수']\n","\n","plt.figure(figsize=(12, 6))\n","ax = average_income_by_age_group[income_cols].plot(kind='bar', ax=plt.gca())\n","plt.xlabel('연령대')\n","plt.ylabel('평균 자산')\n","plt.title('2023년도 연령별 평균 자산 분석')\n","plt.xticks(rotation=0)\n","plt.legend(column_names, title='자산 종류', loc='upper left', bbox_to_anchor=(1, 1))\n","\n","# Y축 최대값 설정\n","plt.ylim(0, 160000)\n","\n","# 막대 위에 숫자 표시 (글씨 크기 조정)\n","for container in ax.containers:\n","    ax.bar_label(container, fmt='%.0f', label_type='edge', fontsize=9, color='black')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0vL1ayWcn6qA"},"outputs":[],"source":["# 20대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_20s = info_data[info_data['AGE_DVS'] == 20]\n","\n","HOUSE_age_year_20s = info_wktks_20s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_20s = info_wktks_20s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_20s.index, HOUSE_age_year_20s.values, marker='o', linestyle='-', label='20대 자가보유')\n","plt.plot(CAR_age_year_20s.index, CAR_age_year_20s.values, marker='o', linestyle='-', label='20대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('20대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GrGK5lw53OdC"},"outputs":[],"source":["# 30대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_30s = info_data[info_data['AGE_DVS'] == 30]\n","\n","HOUSE_age_year_30s = info_wktks_30s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_30s = info_wktks_30s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_30s.index, HOUSE_age_year_30s.values, marker='o', linestyle='-', label='30대 자가보유')\n","plt.plot(CAR_age_year_30s.index, CAR_age_year_30s.values, marker='o', linestyle='-', label='30대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('30대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2sm-HpCc4-v4"},"outputs":[],"source":["# 40대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_40s = info_data[info_data['AGE_DVS'] == 40]\n","\n","HOUSE_age_year_40s = info_wktks_40s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_40s = info_wktks_40s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_40s.index, HOUSE_age_year_40s.values, marker='o', linestyle='-', label='40대 자가보유')\n","plt.plot(CAR_age_year_40s.index, CAR_age_year_40s.values, marker='o', linestyle='-', label='40대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('40대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QSXTgTAF6UdJ"},"outputs":[],"source":["# 50대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_50s = info_data[info_data['AGE_DVS'] == 50]\n","\n","HOUSE_age_year_50s = info_wktks_50s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_50s = info_wktks_50s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_50s.index, HOUSE_age_year_50s.values, marker='o', linestyle='-', label='50대 자가보유')\n","plt.plot(CAR_age_year_50s.index, CAR_age_year_50s.values, marker='o', linestyle='-', label='50대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('50대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aEOK06eD6f8H"},"outputs":[],"source":["# 60대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_60s = info_data[info_data['AGE_DVS'] == 60]\n","\n","HOUSE_age_year_60s = info_wktks_60s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_60s = info_wktks_60s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_60s.index, HOUSE_age_year_60s.values, marker='o', linestyle='-', label='60대 자가보유')\n","plt.plot(CAR_age_year_60s.index, CAR_age_year_60s.values, marker='o', linestyle='-', label='60대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('60대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NUQn3W4x6hyk"},"outputs":[],"source":["# 70대 총 자산\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","info_wktks_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","HOUSE_age_year_70s = info_wktks_70s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","CAR_age_year_70s = info_wktks_70s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(HOUSE_age_year_70s.index, HOUSE_age_year_70s.values, marker='o', linestyle='-', label='70대 자가보유')\n","plt.plot(CAR_age_year_70s.index, CAR_age_year_70s.values, marker='o', linestyle='-', label='70대 자차보유')\n","plt.xlabel('연도')\n","plt.ylabel('자가/자차 보유수')\n","plt.title('70대 년도별 자가/자차 보유수')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t-bRUCmuC_sM"},"outputs":[],"source":["# 2016-2023 각 년도별 연령 별 자가보유 그래프 확인\n","\n","data_20s = info_data[info_data['AGE_DVS'] == 20]\n","data_30s = info_data[info_data['AGE_DVS'] == 30]\n","data_40s = info_data[info_data['AGE_DVS'] == 40]\n","data_50s = info_data[info_data['AGE_DVS'] == 50]\n","data_60s = info_data[info_data['AGE_DVS'] == 60]\n","data_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","lng_ovdu_count_age_year_20s = data_20s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","lng_ovdu_count_age_year_30s = data_30s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","lng_ovdu_count_age_year_40s = data_40s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","lng_ovdu_count_age_year_50s = data_50s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","lng_ovdu_count_age_year_60s = data_60s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","lng_ovdu_count_age_year_70s = data_70s.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(lng_ovdu_count_age_year_20s.index, lng_ovdu_count_age_year_20s.values, marker='o', linestyle='-', label='20대 자가보유')\n","plt.plot(lng_ovdu_count_age_year_30s.index, lng_ovdu_count_age_year_30s.values, marker='o', linestyle='-', label='30대 자가보유')\n","plt.plot(lng_ovdu_count_age_year_40s.index, lng_ovdu_count_age_year_40s.values, marker='o', linestyle='-', label='40대 자가보유')\n","plt.plot(lng_ovdu_count_age_year_50s.index, lng_ovdu_count_age_year_50s.values, marker='o', linestyle='-', label='50대 자가보유')\n","plt.plot(lng_ovdu_count_age_year_60s.index, lng_ovdu_count_age_year_60s.values, marker='o', linestyle='-', label='60대 자가보유')\n","plt.plot(lng_ovdu_count_age_year_70s.index, lng_ovdu_count_age_year_70s.values, marker='o', linestyle='-', label='70대 자가보유')\n","\n","plt.xlabel('년도')\n","plt.ylabel('자가보유')\n","plt.title('년도별 연령대의 자가보유')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eEVMt8PkpKDI"},"outputs":[],"source":["# 2016-2023 각 년도별 생애주기 별 자가보유 그래프 확인\n","\n","\n","young_age = info_data[info_data['AGE_DVS'] == 20]\n","middle_age = info_data[(info_data['AGE_DVS'] == 30) | (info_data['AGE_DVS'] == 40)]\n","seniors_age = info_data[(info_data['AGE_DVS'] == 50) | (info_data['AGE_DVS'] == 60)]\n","older_age = info_data[info_data['AGE_DVS'] == 70]\n","\n","young_age_year = young_age.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","middle_age_year = middle_age.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","seniors_age_year = seniors_age.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","older_age_year = older_age.groupby(['Year'])['OWRNS_HOUSE_EVL_GRAMT_AVG'].mean()\n","\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(young_age_year.index, young_age_year.values, marker='o', linestyle='-', label='청년층 자가보유')\n","plt.plot(middle_age_year.index, middle_age_year.values, marker='o', linestyle='-', label='중년층 자가보유')\n","plt.plot(seniors_age_year.index, seniors_age_year.values, marker='o', linestyle='-', label='장년층 자가보유')\n","plt.plot(older_age_year.index, older_age_year.values, marker='o', linestyle='-', label='노년층 자가보유')\n","\n","\n","plt.xlabel('년도')\n","plt.ylabel('생애주기 별 자가보유)')\n","plt.title('년도별 생애주기 별 자가보유')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YZhq4088DI4S"},"outputs":[],"source":["# 2016-2023 각 년도별 연령 별 자차보유 그래프 확인\n","\n","data_20s = info_data[info_data['AGE_DVS'] == 20]\n","data_30s = info_data[info_data['AGE_DVS'] == 30]\n","data_40s = info_data[info_data['AGE_DVS'] == 40]\n","data_50s = info_data[info_data['AGE_DVS'] == 50]\n","data_60s = info_data[info_data['AGE_DVS'] == 60]\n","data_70s = info_data[info_data['AGE_DVS'] == 70]\n","\n","lng_ovdu_count_age_year_20s = data_20s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","lng_ovdu_count_age_year_30s = data_30s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","lng_ovdu_count_age_year_40s = data_40s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","lng_ovdu_count_age_year_50s = data_50s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","lng_ovdu_count_age_year_60s = data_60s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","lng_ovdu_count_age_year_70s = data_70s.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(lng_ovdu_count_age_year_20s.index, lng_ovdu_count_age_year_20s.values, marker='o', linestyle='-', label='20대 승용차 보유')\n","plt.plot(lng_ovdu_count_age_year_30s.index, lng_ovdu_count_age_year_30s.values, marker='o', linestyle='-', label='30대 승용차 보유')\n","plt.plot(lng_ovdu_count_age_year_40s.index, lng_ovdu_count_age_year_40s.values, marker='o', linestyle='-', label='40대 승용차 보유')\n","plt.plot(lng_ovdu_count_age_year_50s.index, lng_ovdu_count_age_year_50s.values, marker='o', linestyle='-', label='50대 승용차 보유')\n","plt.plot(lng_ovdu_count_age_year_60s.index, lng_ovdu_count_age_year_60s.values, marker='o', linestyle='-', label='60대 승용차 보유')\n","plt.plot(lng_ovdu_count_age_year_70s.index, lng_ovdu_count_age_year_70s.values, marker='o', linestyle='-', label='70대 승용차 보유')\n","\n","plt.xlabel('년도')\n","plt.ylabel('승용차 보유')\n","plt.title('년도별 연령대의 승용차 보유')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yrUag6C8UItg"},"outputs":[],"source":["# 2016-2023 각 년도별 생애주기 별 자차보유 그래프 확인\n","\n","young_age = info_data[info_data['AGE_DVS'] == 20]\n","middle_age = info_data[(info_data['AGE_DVS'] == 30) | (info_data['AGE_DVS'] == 40)]\n","seniors_age = info_data[(info_data['AGE_DVS'] == 50) | (info_data['AGE_DVS'] == 60)]\n","older_age = info_data[info_data['AGE_DVS'] == 70]\n","\n","young_age_year = young_age.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","middle_age_year = middle_age.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","seniors_age_year = seniors_age.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","older_age_year = older_age.groupby(['Year'])['CAR_OALP_AVG'].mean()\n","\n","\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(young_age_year.index, young_age_year.values, marker='o', linestyle='-', label='청년층 자차보유')\n","plt.plot(middle_age_year.index, middle_age_year.values, marker='o', linestyle='-', label='중년층 자차보유')\n","plt.plot(seniors_age_year.index, seniors_age_year.values, marker='o', linestyle='-', label='장년층 자차보유')\n","plt.plot(older_age_year.index, older_age_year.values, marker='o', linestyle='-', label='노년층 자차보유')\n","\n","\n","plt.xlabel('년도')\n","plt.ylabel('생애주기 별 자차보유)')\n","plt.title('년도별 생애주기 별 자차보유')\n","plt.legend(bbox_to_anchor=(1,1))\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"Ly1x0pdQnEwL"},"source":["# 연령 구간 별 직업 종사 비율 비교 분석\n","### AGE_DVS 기준 (RATE_TOBIZ_410,420,430, 440,50,520,910)*NOPE"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HhbZr9DShskF"},"outputs":[],"source":["# 결측치를 0으로 대체\n","info_data_filled = info_data.fillna(0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4IFx44tqoPuJ"},"outputs":[],"source":["# 필요한 칼럼 추출\n","columns_to_use = ['AGE_DVS', 'NOPE', 'RATE_TOBIZ_410', 'RATE_TOBIZ_420', 'RATE_TOBIZ_430', 'RATE_TOBIZ_440', 'RATE_TOBIZ_510', 'RATE_TOBIZ_520', 'RATE_TOBIZ_910']\n","data_to_use = info_data[columns_to_use]\n","\n","# 직업 종사자수 계산\n","for col in columns_to_use[2:]:\n","    data_to_use[col + '_num'] = data_to_use['NOPE'] * data_to_use[col]\n","\n","# 연령대별로 그룹화\n","age_grouped = data_to_use.groupby('AGE_DVS').sum()\n","\n","# 직업 종사자 비율 계산\n","for col in columns_to_use[2:]:\n","    age_grouped[col + '_ratio'] = age_grouped[col + '_num'] / age_grouped['NOPE']\n","\n","# 시각화 (꺾은선 그래프)\n","ax = age_grouped[[col + '_ratio' for col in columns_to_use[2:]]].plot(kind='line', marker='o')\n","plt.xlabel('연령대')\n","plt.ylabel('직업종사자비율')\n","plt.title('연령대별 직업종사자 비율')\n","\n","# 범례 이름 설정\n","ax.legend(labels=['대기업급여소득자', '일반급여소득자', '전문직급여소득자', '대표', '일반자영업자', '전문직자영업자', '기타(주부,학생,무직자 등)'])\n","\n","plt.xticks(rotation=0)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BxyHO5rlEetG"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# 데이터 로드 및 필요한 칼럼 추출\n","columns_to_use = ['DONG_CD', 'NOPE', 'RATE_TOBIZ_410', 'RATE_TOBIZ_420', 'RATE_TOBIZ_430', 'RATE_TOBIZ_440', 'RATE_TOBIZ_510', 'RATE_TOBIZ_520', 'RATE_TOBIZ_910']\n","data_to_use = info_data[columns_to_use]\n","\n","# 각 지역별 데이터 프레임 분리\n","regions = {\n","    '천안시': data_to_use[data_to_use['DONG_CD'].str.startswith('4413')],\n","    '공주시': data_to_use[data_to_use['DONG_CD'].str.startswith('4415')],\n","    '보령시': data_to_use[data_to_use['DONG_CD'].str.startswith('4418')],\n","    '아산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4420')],\n","    '서산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4421')],\n","    '논산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4423')],\n","    '계룡시': data_to_use[data_to_use['DONG_CD'].str.startswith('4425')],\n","    '당진시': data_to_use[data_to_use['DONG_CD'].str.startswith('4427')],\n","    '금산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4471')],\n","    '부여군': data_to_use[data_to_use['DONG_CD'].str.startswith('4476')],\n","    '서천군': data_to_use[data_to_use['DONG_CD'].str.startswith('4477')],\n","    '청양군': data_to_use[data_to_use['DONG_CD'].str.startswith('4479')],\n","    '홍성군': data_to_use[data_to_use['DONG_CD'].str.startswith('4480')],\n","    '예산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4481')],\n","    '태안군': data_to_use[data_to_use['DONG_CD'].str.startswith('4482')]\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","for region_name, data_frame in regions.items():\n","    # 지역별 직업 종사자 비율 계산\n","    occupation_ratios = data_frame[columns_to_use[2:]].sum() / data_frame['NOPE'].sum()\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(occupation_ratios, label=region_name)\n","\n","# X축 라벨 및 위치 설정\n","x_labels = ['대기업급여소득자', '일반급여소득자', '전문직급여소득자', '대표', '일반자영업자', '전문직자영업자', '기타(주부,학생,무직자 등)']\n","x_positions = range(len(columns_to_use[2:]))\n","plt.xticks(x_positions, x_labels, rotation=45)\n","\n","plt.title(\"지역별 직업군 비율\")\n","plt.xlabel(\"직업군\")\n","plt.ylabel(\"직업군 비율\")\n","plt.legend()\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QLjDcUjVDxgp"},"outputs":[],"source":["# 데이터 로드 및 필요한 칼럼 추출\n","columns_to_use = ['DONG_CD', 'NOPE', 'RATE_TOBIZ_410', 'RATE_TOBIZ_420', 'RATE_TOBIZ_430', 'RATE_TOBIZ_440', 'RATE_TOBIZ_510', 'RATE_TOBIZ_520', 'RATE_TOBIZ_910']\n","data_to_use = info_data[columns_to_use]\n","\n","# 각 지역별 데이터 프레임 분리\n","regions = {\n","    '천안시': data_to_use[data_to_use['DONG_CD'].str.startswith('4413')],\n","    '공주시': data_to_use[data_to_use['DONG_CD'].str.startswith('4415')],\n","    '보령시': data_to_use[data_to_use['DONG_CD'].str.startswith('4418')],\n","    '아산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4420')],\n","    '서산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4421')],\n","    '논산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4423')],\n","    '계룡시': data_to_use[data_to_use['DONG_CD'].str.startswith('4425')],\n","    '당진시': data_to_use[data_to_use['DONG_CD'].str.startswith('4427')],\n","    '금산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4471')],\n","    '부여군': data_to_use[data_to_use['DONG_CD'].str.startswith('4476')],\n","    '서천군': data_to_use[data_to_use['DONG_CD'].str.startswith('4477')],\n","    '청양군': data_to_use[data_to_use['DONG_CD'].str.startswith('4479')],\n","    '홍성군': data_to_use[data_to_use['DONG_CD'].str.startswith('4480')],\n","    '예산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4481')],\n","    '태안군': data_to_use[data_to_use['DONG_CD'].str.startswith('4482')]\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","# 직업군 칼럼 리스트\n","occupation_columns = columns_to_use[2:]\n","\n","for occupation_column in occupation_columns:\n","    # 각 직업군별 비율을 저장할 리스트\n","    occupation_ratios = []\n","\n","    for region_name, data_frame in regions.items():\n","        # 해당 지역의 직업군 비율을 계산하여 리스트에 추가\n","        occupation_ratio = data_frame[occupation_column].sum() / data_frame['NOPE'].sum()\n","        occupation_ratios.append(occupation_ratio)\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(list(regions.keys()), occupation_ratios, label=occupation_column)\n","\n","plt.title(\"지역별 직업군 비율\")\n","plt.xlabel(\"지역\")\n","plt.ylabel(\"직업군 비율\")\n","plt.xticks(rotation=45)\n","plt.legend(labels=['대기업급여소득자', '일반급여소득자', '전문직급여소득자', '대표', '일반자영업자', '전문직자영업자', '기타(주부,학생,무직자 등)'])\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qe7Z_zSEFSix"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# 데이터 로드 및 필요한 칼럼 추출\n","columns_to_use = ['DONG_CD', 'NOPE', 'RATE_TOBIZ_410', 'RATE_TOBIZ_420', 'RATE_TOBIZ_430', 'RATE_TOBIZ_440', 'RATE_TOBIZ_510', 'RATE_TOBIZ_520', 'RATE_TOBIZ_910']\n","data_to_use = info_data[columns_to_use]\n","\n","# 각 지역별 데이터 프레임 분리\n","regions = {\n","    '천안시': data_to_use[data_to_use['DONG_CD'].str.startswith('4413')],\n","    '공주시': data_to_use[data_to_use['DONG_CD'].str.startswith('4415')],\n","    '보령시': data_to_use[data_to_use['DONG_CD'].str.startswith('4418')],\n","    '아산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4420')],\n","    '서산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4421')],\n","    '논산시': data_to_use[data_to_use['DONG_CD'].str.startswith('4423')],\n","    '계룡시': data_to_use[data_to_use['DONG_CD'].str.startswith('4425')],\n","    '당진시': data_to_use[data_to_use['DONG_CD'].str.startswith('4427')],\n","    '금산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4471')],\n","    '부여군': data_to_use[data_to_use['DONG_CD'].str.startswith('4476')],\n","    '서천군': data_to_use[data_to_use['DONG_CD'].str.startswith('4477')],\n","    '청양군': data_to_use[data_to_use['DONG_CD'].str.startswith('4479')],\n","    '홍성군': data_to_use[data_to_use['DONG_CD'].str.startswith('4480')],\n","    '예산군': data_to_use[data_to_use['DONG_CD'].str.startswith('4481')],\n","    '태안군': data_to_use[data_to_use['DONG_CD'].str.startswith('4482')]\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","# 직업군 칼럼 리스트\n","occupation_columns = columns_to_use[2:]\n","\n","for occupation_column in occupation_columns:\n","    # 각 직업군별 인구수를 저장할 리스트\n","    occupation_populations = []\n","\n","    for region_name, data_frame in regions.items():\n","        # 해당 지역의 직업군 인구수를 계산하여 리스트에 추가\n","        occupation_population = data_frame[occupation_column].sum()\n","        occupation_populations.append(occupation_population)\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(list(regions.keys()), occupation_populations, label=occupation_column)\n","\n","plt.title(\"지역별 직업군 인구수\")\n","plt.xlabel(\"지역\")\n","plt.ylabel(\"직업군 인구수\")\n","plt.xticks(rotation=45)\n","plt.legend(labels=['대기업급여소득자', '일반급여소득자', '전문직급여소득자', '대표', '일반자영업자', '전문직자영업자', '기타(주부,학생,무직자 등)'])\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"bv4hEe6C5uoO"},"source":["#지역별 분석\n","#각 지역별 주 연령대 비율 분석\n","### AGE_DVS, NOPE\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5LGRHd_STY61"},"outputs":[],"source":["info_data['DONG_CD'] = info_data['DONG_CD'].astype(str)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cYY0-r4YvArm"},"outputs":[],"source":["# 천안시로 분리\n","cheonan_data = info_data[info_data['DONG_CD'].str.startswith('4413')]\n","\n","# 공주시로 분리\n","gongju_data = info_data[info_data['DONG_CD'].str.startswith('4415')]\n","\n","# 보령시로 분리\n","boryeong_data = info_data[info_data['DONG_CD'].str.startswith('4418')]\n","\n","# 아산시로 분리\n","asan_data = info_data[info_data['DONG_CD'].str.startswith('4420')]\n","\n","# 서산시로 분리\n","seosan_data = info_data[info_data['DONG_CD'].str.startswith('4421')]\n","\n","# 논산시로 분리\n","nonsan_data = info_data[info_data['DONG_CD'].str.startswith('4423')]\n","\n","# 계룡시로 분리\n","gyeryong_data = info_data[info_data['DONG_CD'].str.startswith('4425')]\n","\n","# 당진시로 분리\n","dangjin_data = info_data[info_data['DONG_CD'].str.startswith('4427')]\n","\n","# 금산군으로 분리\n","geumsan_data = info_data[info_data['DONG_CD'].str.startswith('4471')]\n","\n","# 부여군으로 분리\n","buyeo_data = info_data[info_data['DONG_CD'].str.startswith('4476')]\n","\n","# 서천군으로 분리\n","seocheong_data = info_data[info_data['DONG_CD'].str.startswith('4477')]\n","\n","# 청양군으로 분리\n","cheongyang_data = info_data[info_data['DONG_CD'].str.startswith('4479')]\n","\n","# 홍성군으로 분리\n","hongseong_data = info_data[info_data['DONG_CD'].str.startswith('4480')]\n","\n","# 예산군으로 분리\n","yesan_data = info_data[info_data['DONG_CD'].str.startswith('4481')]\n","\n","# 태안군으로 분리\n","taean_data = info_data[info_data['DONG_CD'].str.startswith('4482')]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KTn_1mnrWESr"},"outputs":[],"source":["# 지역별 분석 - 각 지역별 주 연령대 비율 분석 AGE_DVS, NOPE\n","\n","# 각 지역별 연령대별 인구수 합계 계산\n","age_grouped = info_data.groupby(['DONG_CD', 'AGE_DVS'])['NOPE'].sum().reset_index()\n","\n","# 각 지역별 총 인구수 계산\n","region_population_16 = info_data.groupby('DONG_CD')['NOPE'].sum().reset_index()\n","\n","# 각 지역별 주 연령대 비율 계산\n","result = pd.merge(age_grouped, region_population_16, on='DONG_CD', suffixes=('_age', '_total'))\n","result['Ratio'] = result['NOPE_age'] / result['NOPE_total'] * 100"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XLr6CP4tbbc4"},"outputs":[],"source":["# 데이터셋 이름을 리스트로 저장\n","dataset_names = ['cheonan_data', 'gongju_data', 'boryeong_data', 'asan_data', 'seosan_data',\n","                 'nonsan_data', 'gyeryong_data', 'dangjin_data', 'geumsan_data', 'buyeo_data',\n","                 'seocheong_data', 'cheongyang_data', 'hongseong_data', 'yesan_data', 'taean_data']\n","\n","# 시각화 설정\n","sns.set(style=\"whitegrid\")\n","plt.rc('font', family='NanumBarunGothic')\n","\n","# 그래프 그릴 영역 생성\n","plt.figure(figsize=(10, 6))\n","\n","# 데이터셋 이름별로 루프 돌며 꺾은선 그래프 그리기\n","for dataset_name in dataset_names:\n","    data = globals()[dataset_name]  # 데이터셋 이름을 변수로 변환하여 데이터 가져오기\n","    region_code = data['DONG_CD'].iloc[0]  # 지역 코드\n","    if region_code.startswith('4413'):\n","        region_name = '천안시'\n","    elif region_code.startswith('4415'):\n","        region_name = '공주시'\n","    elif region_code.startswith('4418'):\n","        region_name = '보령시'\n","    elif region_code.startswith('4420'):\n","        region_name = '아산시'\n","    elif region_code.startswith('4421'):\n","        region_name = '서산시'\n","    elif region_code.startswith('4423'):\n","        region_name = '논산시'\n","    elif region_code.startswith('4425'):\n","        region_name = '계룡시'\n","    elif region_code.startswith('4427'):\n","        region_name = '당진시'\n","    elif region_code.startswith('4471'):\n","        region_name = '금산군'\n","    elif region_code.startswith('4476'):\n","        region_name = '부여군'\n","    elif region_code.startswith('4477'):\n","        region_name = '서천군'\n","    elif region_code.startswith('4479'):\n","        region_name = '청양군'\n","    elif region_code.startswith('4480'):\n","        region_name = '홍성군'\n","    elif region_code.startswith('4481'):\n","        region_name = '예산군'\n","    elif region_code.startswith('4482'):\n","        region_name = '태안군'\n","    else:\n","        region_name = f'Unknown ({region_code})'\n","\n","    age_grouped = data.groupby('AGE_DVS')['NOPE'].sum().reset_index()  # 연령대별 인구수 합계\n","    plt.plot(age_grouped['AGE_DVS'], age_grouped['NOPE'], label=region_name)\n","\n","# 그래프의 제목과 레이블 설정\n","plt.xlabel('연령대')\n","plt.ylabel('인구수')\n","plt.title('시/군 연령대별 인구수')\n","plt.legend(loc='best')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qGSoS5aditnF"},"outputs":[],"source":["# 데이터셋 이름을 리스트로 저장\n","dataset_names = ['cheonan_data', 'gongju_data', 'boryeong_data', 'asan_data', 'seosan_data',\n","                 'nonsan_data', 'gyeryong_data', 'dangjin_data', 'geumsan_data', 'buyeo_data',\n","                 'seocheong_data', 'cheongyang_data', 'hongseong_data', 'yesan_data', 'taean_data']\n","\n","# 시각화 설정\n","sns.set(style=\"whitegrid\")\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","\n","# 데이터셋 이름별로 루프 돌며 그래프 그리기\n","for dataset_name in dataset_names:\n","    data = globals()[dataset_name]  # 데이터셋 이름을 변수로 변환하여 데이터 가져오기\n","    region_code = data['DONG_CD'].iloc[0]  # 지역 코드\n","    if region_code.startswith('4413'):\n","        region_name = '천안시'\n","    elif region_code.startswith('4415'):\n","        region_name = '공주시'\n","    elif region_code.startswith('4418'):\n","        region_name = '보령시'\n","    elif region_code.startswith('4420'):\n","        region_name = '아산시'\n","    elif region_code.startswith('4421'):\n","        region_name = '서산시'\n","    elif region_code.startswith('4423'):\n","        region_name = '논산시'\n","    elif region_code.startswith('4425'):\n","        region_name = '계룡시'\n","    elif region_code.startswith('4427'):\n","        region_name = '당진시'\n","    elif region_code.startswith('4471'):\n","        region_name = '금산군'\n","    elif region_code.startswith('4476'):\n","        region_name = '부여군'\n","    elif region_code.startswith('4477'):\n","        region_name = '서천군'\n","    elif region_code.startswith('4479'):\n","        region_name = '청양군'\n","    elif region_code.startswith('4480'):\n","        region_name = '홍성군'\n","    elif region_code.startswith('4481'):\n","        region_name = '예산군'\n","    elif region_code.startswith('4482'):\n","        region_name = '태안군'\n","    else:\n","        region_name = f'Unknown ({region_code})'\n","\n","    plt.figure(figsize=(10, 6))\n","    age_grouped = data.groupby('AGE_DVS')['NOPE'].sum().reset_index()  # 연령대별 인구수 합계\n","    plt.bar(age_grouped['AGE_DVS'], age_grouped['NOPE'])\n","    plt.xlabel('연령대')\n","    plt.ylabel('인구수')\n","    plt.title(f'{region_name} 연령대별 인구수')\n","\n","    age_grouped = data.groupby('AGE_DVS')['NOPE'].sum().reset_index()  # 연령대별 인구수 합계\n","    total_population = age_grouped['NOPE'].sum()  # 전체 인구수 계산\n","\n","    age_grouped['Ratio'] = age_grouped['NOPE'] / total_population  # 인구수 비율 계산\n","\n","    plt.bar(age_grouped['AGE_DVS'], age_grouped['NOPE'], label=region_name)\n","\n","    # 막대그래프 위에 비율 텍스트 표시\n","    for i, ratio in enumerate(age_grouped['Ratio']):\n","        plt.text(age_grouped['AGE_DVS'][i], age_grouped['NOPE'][i] + 100, f'{ratio:.2%}', ha='center')\n","\n","    plt.show()\n","plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HOmYuK7c5_MJ"},"outputs":[],"source":["plt.rc('font', family='NanumBarunGothic')\n","plt.figure(figsize=(8, 8))\n","\n","# 각 지역별 데이터 프레임\n","regions = {\n","    '천안시': cheonan_data,\n","    '공주시': gongju_data,\n","    '보령시': boryeong_data,\n","    '아산시': asan_data,\n","    '서산시': seosan_data,\n","    '논산시': nonsan_data,\n","    '계룡시': gyeryong_data,\n","    '당진시': dangjin_data,\n","    '금산군': geumsan_data,\n","    '부여군': buyeo_data,\n","    '서천군': seocheong_data,\n","    '청양군': cheongyang_data,\n","    '홍성군': hongseong_data,\n","    '예산군': yesan_data,\n","    '태안군': taean_data\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","for region_name, data_frame in regions.items():\n","    # 연령대별 연소득 평균 계산\n","    age_income_mean = data_frame.groupby('AGE_DVS')['MM_INCM'].mean()\n","\n","    # 전체 연소득 합계 계산\n","    total_income_sum = data_frame['MM_INCM'].sum()\n","\n","    # 연령대별 연소득 주민 비율 계산\n","    age_income_ratio = age_income_mean / total_income_sum\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(age_income_ratio, label=region_name)\n","\n","plt.title(\"연령대별 연소득 주민 비율\")\n","plt.xlabel(\"연령대\")\n","plt.ylabel(\"연소득 주민 비율\")\n","plt.xticks(rotation=45)\n","plt.legend()\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"REnztrD95_dD"},"outputs":[],"source":["# 각 지역별 데이터 프레임\n","regions = {\n","    '천안시': cheonan_data,\n","    '공주시': gongju_data,\n","    '보령시': boryeong_data,\n","    '아산시': asan_data,\n","    '서산시': seosan_data,\n","    '논산시': nonsan_data,\n","    '계룡시': gyeryong_data,\n","    '당진시': dangjin_data,\n","    '금산군': geumsan_data,\n","    '부여군': buyeo_data,\n","    '서천군': seocheong_data,\n","    '청양군': cheongyang_data,\n","    '홍성군': hongseong_data,\n","    '예산군': yesan_data,\n","    '태안군': taean_data\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","for region_name, data_frame in regions.items():\n","    # 연령대별 연소득 평균 계산\n","    age_income_mean = data_frame.groupby('AGE_DVS')['MM_INCM'].mean()\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(age_income_mean, label=region_name)\n","\n","plt.title(\"지역별 연령대별 연소득 평균\")\n","plt.xlabel(\"연령대\")\n","plt.ylabel(\"연소득 평균\")\n","plt.xticks(rotation=45)\n","plt.legend()\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mum2GQeZ66eh"},"outputs":[],"source":["# 각 지역별 데이터 프레임\n","regions = {\n","    '천안시': cheonan_data,\n","    '공주시': gongju_data,\n","    '보령시': boryeong_data,\n","    '아산시': asan_data,\n","    '서산시': seosan_data,\n","    '논산시': nonsan_data,\n","    '계룡시': gyeryong_data,\n","    '당진시': dangjin_data,\n","    '금산군': geumsan_data,\n","    '부여군': buyeo_data,\n","    '서천군': seocheong_data,\n","    '청양군': cheongyang_data,\n","    '홍성군': hongseong_data,\n","    '예산군': yesan_data,\n","    '태안군': taean_data\n","}\n","\n","# 그래프로 나타내기\n","plt.figure(figsize=(12, 8))\n","\n","for region_name, data_frame in regions.items():\n","    # 연도별 연소득 평균 계산\n","    year_income_mean = data_frame.groupby('Year')['MM_INCM'].mean()\n","\n","    # 꺾은선 그래프로 추가\n","    plt.plot(year_income_mean, label=region_name)\n","\n","plt.title(\"각 지역별 연도별 연소득 평균\")\n","plt.xlabel(\"연도\")\n","plt.ylabel(\"연소득 평균\")\n","plt.xticks(rotation=45)\n","plt.legend()\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kD6vsu81_KJf"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyPZ/xfqzRAyl3fgBvMaXFc2","name":"","provenance":[{"file_id":"1VxBTv_Vl00wCaDSJAQO4Bj7hIZQZK3DU","timestamp":1691498786541}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}