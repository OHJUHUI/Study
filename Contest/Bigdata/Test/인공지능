{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPQ6JzeMoWfd3vMZUbopZZo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"HmGFN2sWAAeg","executionInfo":{"status":"ok","timestamp":1689308562407,"user_tz":-540,"elapsed":819,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"outputs":[],"source":["import numpy as np\n","from sklearn import linear_model\n","\n","regr = linear_model.LinearRegression()   # 선형회귀 모델 생성"]},{"cell_type":"code","source":["x = [[163], [179], [166], [169], [171]]  # 2차원 리스트\n","y = [54, 63, 57, 56, 58]\n","regr.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"F1LzQ3CLotX6","executionInfo":{"status":"ok","timestamp":1689308657141,"user_tz":-540,"elapsed":7,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"bc1648da-3eb9-4e75-bc25-db1d9b93ee7e"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["coef = regr.coef_\n","intercept = regr.intercept_\n","score = regr.score(x,y)"],"metadata":{"id":"ytN7uovKpHK4","executionInfo":{"status":"ok","timestamp":1689308800210,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["print(\"\".format(coef.round(2), intercept))\n","print(\"\".format(score))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OAkRbXUrpqIF","executionInfo":{"status":"ok","timestamp":1689308897143,"user_tz":-540,"elapsed":277,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"00360278-448d-45f5-f560-83e94a6db4b2"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.scatter(x, y ,color='blue', marker='D')\n","y_pred = regr.predict(x)\n","plt.plot(x, y_pred, 'r:')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"5eaokXvup92p","executionInfo":{"status":"ok","timestamp":1689309024927,"user_tz":-540,"elapsed":595,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"3d3f4956-89f1-429d-981f-7b2f235a1a20"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7a68627cffa0>]"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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Va1aNQUHB6tFixZasGCBG1txdfm10eFw5Pp49dVXs56TlJSk3r17KyQkRGFhYRowYIDOnDnj5pbkrqjt279/vwYMGKDatWurTJkyuvbaazVmzBilpaXZ0Jo/csXXL1NqaqqaNWsmh8OhTZs2uacBBeCqNn7xxRdq06aNypQpowoVKuiee+5xXyOuwhXt27Vrl7p166bKlSsrJCRE7du316pVq9zckuJB+HDS2bNnFR0drWnTpuX68b1796p9+/Zq2LChvv32W23ZskWjR49W6dKl//DcKVOmeOQW8q5oY3x8vDp37qxOnTppzZo1Wrt2rZ544ol8t9x1B1e0r1+/ftq5c6cWL16srVu3qnv37urZs6c2btzormZcVX5tPHLkSI5HbGysHA6HevTokfWc3r17a/v27Vq+fLmWLFmi//3vf3r00Ufd1YSrKmr7duzYoYyMDL3zzjvavn27Jk+erOnTp+vvf/+7O5uRJ1d8/TKNGDFCERERxV2y01zRxgULFqhv37565JFHtHnzZn3//fd66KGH3NWEq3JF++666y5dvHhRK1eu1Pr16xUdHa277rpLiYmJ7mpG8bFQaJKshQsX5rj3wAMPWH369Mn3czdu3GjVqFHDOnLkSK6v4ykK28Y2bdpYzz//fDFW5hqFbV9wcLD13nvv5bhXsWJFa+bMma4uscgK8u+rW7duVocOHbKuf/zxR0uStXbt2qx7X331leVwOKxDhw4VV6mFUpj25eaVV16xateu7cLKXKMo7fvyyy+thg0bWtu3b7ckWRs3biyeIouoMG1MT0+3atSoYc2aNauYqyu6wrTv+PHjliTrf//7X9a9lJQUS5K1fPny4irVbez/b6gPycjI0BdffKH69evrjjvuUHh4uNq0afOH7rZz587poYce0rRp01StWjV7ii2kgrTx2LFjSkhIUHh4uNq2bauqVavq5ptv1nfffWdf4QVU0K9h27Zt9cknnygpKUkZGRmaN2+eLly4oFtuucWWuovi6NGj+uKLLzRgwICse/Hx8QoLC1OrVq2y7nXs2FElSpRQQkKCHWUWWm7ty01ycrIqVqzopqpcJ6/2HT16VIMGDdL777+vsmXL2lSda+TWxg0bNujQoUMqUaKEmjdvrurVq6tLly7atm2bjZUWTm7tq1Spkho0aKD33ntPZ8+e1cWLF/XOO+8oPDxc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\n"},"metadata":{}}]},{"cell_type":"code","source":["unseen = [[167]]\n","result = regr.predict(unseen)\n","print(\"\". format(unseen, result.round(1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JHVsQvwfqYAc","executionInfo":{"status":"ok","timestamp":1689309096093,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"0ae25fc8-6b4e-42b8-f061-96d89295d1ce"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"cKKiLA1Gtoew"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = [[168, 0], [166, 0], [173, 0], [165, 0], [177, 0], [163, 0], [178, 0], [172, 0], [163, 1], [162, 1], [171, 1], [162, 1], [164, 1], [162, 1], [158, 1], [173, 1]]\n","y = [65, 61, 68, 63, 68, 61, 76, 67, 55, 51, 59, 53, 61, 56, 44, 57]\n","regr.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"KmWaqlLQqyW-","executionInfo":{"status":"ok","timestamp":1689309737224,"user_tz":-540,"elapsed":6,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"afc47db0-c1df-41ac-8b09-023341591158"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["coef = regr.coef_\n","intercept = regr.intercept_\n","score = regr.score(x,y)"],"metadata":{"id":"h3bBNqvXrdT_","executionInfo":{"status":"ok","timestamp":1689309738236,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["print(regr.coef_)\n","print(regr.intercept_)\n","print(regr.score(x,y))\n","print(regr.predict([[167, 0], [167, 1]]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PLc6Z2F6rsJU","executionInfo":{"status":"ok","timestamp":1689309738584,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"2ca1040b-d274-4f4e-d7e6-f525b620a2f7"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 0.74803397 -7.23030041]\n","-61.22778389430634\n","0.8425933302504423\n","[63.69388959 56.46358918]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"ZTK0mAfZrjba"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y = np.array([1.2, 2.4, 2.5, 4.6, 5.4])\n","y_hat = np.array([1, 2, 3, 4, 5])\n","diff = (y_hat - y) ** 2\n","e_mse = diff.sum() / len(y)\n","print(\"\", e_mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4a-9Y12EuArl","executionInfo":{"status":"ok","timestamp":1689310036391,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"0bc10190-640d-4151-d96c-b43138fed3ff"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":[" 0.19399999999999995\n"]}]},{"cell_type":"code","source":["# 오차제곱 (mean_squared_error()함수 이용)\n","from sklearn.metrics import mean_squared_error\n","print(\"\", mean_squared_error(y_hat, y))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4aKdZGpuX7Y","executionInfo":{"status":"ok","timestamp":1689310118951,"user_tz":-540,"elapsed":259,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"8ec5a6a7-b384-40f4-82e0-60a34fe03184"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":[" 0.19399999999999995\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"MeEgjlstusB3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = np.array([1, 4.5, 9, 10, 13])\n","y = np.array([0, 0.2, 2.5, 5.4, 7.3])\n","\n","w, b = 0, 0\n","learning_rate, epoch = 0.005, 1000\n","n = len(x)\n","\n","for i in range(epoch):\n","  y_pred = w*x + b\n","  error = y_pred - y\n","  w = w - learning_rate *(error * x).sum()\n","  b = b - learning_rate * error.sum()\n","\n","print('w = ', w.round(2), 'b = ', b.round(2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ye7CANHrwb6U","executionInfo":{"status":"ok","timestamp":1689312283093,"user_tz":-540,"elapsed":290,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"1a336471-12a5-4dd9-b664-105189afd2c5"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["w =  0.63 b =  -1.65\n"]}]},{"cell_type":"code","source":["from sklearn import linear_model\n","import numpy as np\n","\n","x = np.array([1, 4.5, 9, 10, 13])\n","y = np.array([0, 0.2, 2.5, 5.4, 7.3])\n","\n","regr = linear_model.LinearRegression()\n","x = x[:, np.newaxis]\n","regr.fit(x,y)\n","\n","print(\"w = \",regr.coef_.round(2), \"b = \", regr.intercept_.round(2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EdNeIfTV2N66","executionInfo":{"status":"ok","timestamp":1689312987749,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"b1f96533-4235-4e51-cf7b-825cf4346429"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["w =  [0.63] b =  -1.65\n"]}]},{"cell_type":"code","source":["x = np.array([1, 4.5, 9, 10, 13])\n","y = np.array([0, 0.2, 2.5, 5.4, 7.3])\n","\n","plt.scatter(x, y, color='blue', marker='D')\n","\n","y_pred = 0.63 * x -1.65\n","plt.plot(x,y_pred, 'r:')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"XGYrTTkJ5UXN","executionInfo":{"status":"ok","timestamp":1689313333585,"user_tz":-540,"elapsed":511,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"1147b27c-0111-49d7-a37a-80dd00a0891a"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7a685655fca0>]"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x = np.array([1, 4.5, 9, 10, 13])\n","y = np.array([0, 0.2, 2.5, 5.4, 7.3])\n","\n","w, b = 0, 0\n","learning_rate, epoch = 0.00001, 1000\n","n = len(x)\n","\n","for i in range(epoch):\n","  y_pred = w*x + b\n","  error = y_pred - y\n","  w = w - learning_rate *(error * x).sum()\n","  b = b - learning_rate * error.sum()\n","\n","print('w = ', w.round(2), 'b = ', b.round(2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sJIbwaiX8jMU","executionInfo":{"status":"ok","timestamp":1689313875953,"user_tz":-540,"elapsed":396,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"0c733e4a-e717-4b9c-a472-9eb053186235"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["w =  0.45 b =  0.03\n"]}]},{"cell_type":"code","source":["x = np.array([1, 4.5, 9, 10, 13])\n","y = np.array([0, 0.2, 2.5, 5.4, 7.3])\n","\n","w, b = 0, 0\n","learning_rate, epoch = 1.0, 1000\n","n = len(x)\n","\n","for i in range(epoch):\n","  y_pred = w*x + b\n","  error = y_pred - y\n","  w = w - learning_rate *(error * x).sum()\n","  b = b - learning_rate * error.sum()\n","\n","print('w = ', w.round(2), 'b = ', b.round(2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3natngA9BMw","executionInfo":{"status":"ok","timestamp":1689313926384,"user_tz":-540,"elapsed":274,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"543b9396-4372-4ad3-af19-95643f068a5a"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["w =  nan b =  nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-48-aa0a1c11aaa8>:11: RuntimeWarning: invalid value encountered in double_scalars\n","  w = w - learning_rate *(error * x).sum()\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"GvLnis8E9M18"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn import linear_model\n","from sklearn.linear_model import LinearRegression\n","from sklearn import datasets"],"metadata":{"id":"GQEFcK4J9RKp","executionInfo":{"status":"ok","timestamp":1689314364528,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["diabetes_X, diabetes_y = datasets.load_diabetes(return_X_y = True)"],"metadata":{"id":"R4N56LHf9ted","executionInfo":{"status":"ok","timestamp":1689314364851,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["diabetes_X_new = diabetes_X[:, np.newaxis, 2]"],"metadata":{"id":"KUVLDGSE9v20","executionInfo":{"status":"ok","timestamp":1689314364852,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(diabetes_X_new, diabetes_y, test_size = 0.1, random_state=0)"],"metadata":{"id":"vo_RUvtV9_-d","executionInfo":{"status":"ok","timestamp":1689314365189,"user_tz":-540,"elapsed":6,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["regr = linear_model.LinearRegression()\n","regr.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"EISchfCL-aqs","executionInfo":{"status":"ok","timestamp":1689314373386,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"5a48006d-7ebf-417d-c445-b2ec4679befd"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["y_pred = regr.predict(X_test)"],"metadata":{"id":"Le0z5MiJ-yp6","executionInfo":{"status":"ok","timestamp":1689314446550,"user_tz":-540,"elapsed":280,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["plt.plot(y_test, y_pred, '.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"8JUVT7FY_ChZ","executionInfo":{"status":"ok","timestamp":1689314578833,"user_tz":-540,"elapsed":736,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"ce486e80-3a3b-4774-d44c-7475764e10ec"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7a6855e0e410>]"]},"metadata":{},"execution_count":73},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.scatter(X_test, y_test, color = 'black')\n","plt.plot(X_test, y_pred, color = 'blue', linewidth=3)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"ZE8eL0vT_frt","executionInfo":{"status":"ok","timestamp":1689314584084,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"b4c6387b-2b4d-4cb4-d11a-7687d51132af"},"execution_count":75,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"O7HjA0ajAG0R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error"],"metadata":{"id":"YdtqPkR2_tVY","executionInfo":{"status":"ok","timestamp":1689314710590,"user_tz":-540,"elapsed":2,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["# mean_absolute_error 함수 이용 MAE구하기\n","y_true = [3, -0.5, 2, 7]\n","y_pred = [2.5, 0.0, 2, 8]\n","mean_absolute_error(y_true, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1fzy_hFhANGY","executionInfo":{"status":"ok","timestamp":1689314760259,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"b09eaa03-ebd7-4885-8ba9-b2aadb06cffa"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error"],"metadata":{"id":"7u84gGniAZQS","executionInfo":{"status":"ok","timestamp":1689314899945,"user_tz":-540,"elapsed":276,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["y_true = [3, -0.5, 2, 7]\n","y_pred = [2.5, 0.0, 2, 8]\n","mean_squared_error(y_true, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CZdYHRpcA7Nz","executionInfo":{"status":"ok","timestamp":1689314945415,"user_tz":-540,"elapsed":268,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"b0895800-2958-4eb1-d346-6f5a60ddbd11"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.375"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":[],"metadata":{"id":"jYqUxYIrBGWT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 날씨데이터 예측하기"],"metadata":{"id":"CAzTwKb1Bc6n","executionInfo":{"status":"ok","timestamp":1689315121907,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"RMhGQthTBxjy","executionInfo":{"status":"ok","timestamp":1689315160317,"user_tz":-540,"elapsed":336,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":82,"outputs":[]},{"cell_type":"code","source":["seoul = pd.read_excel(\"/content/weather.xlsx\")\n","seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-1x6SxH_B1ps","executionInfo":{"status":"ok","timestamp":1689315435188,"user_tz":-540,"elapsed":1352,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"1c775082-0d81-4f13-fd86-15fe56fcb0cf"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          날짜   지점  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","0 2010-01-01  108     -7.6    -12.7     -3.6\n","1 2010-01-02  108     -3.6     -7.4      0.2\n","2 2010-01-03  108     -6.8    -10.5     -3.2\n","3 2010-01-04  108     -5.9     -8.0     -3.4\n","4 2010-01-05  108     -9.9    -12.3     -7.0"],"text/html":["\n","\n","  <div id=\"df-351b2b82-411d-469f-aa12-66606e54dac8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>날짜</th>\n","      <th>지점</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>108</td>\n","      <td>-7.6</td>\n","      <td>-12.7</td>\n","      <td>-3.6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-02</td>\n","      <td>108</td>\n","      <td>-3.6</td>\n","      <td>-7.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-03</td>\n","      <td>108</td>\n","      <td>-6.8</td>\n","      <td>-10.5</td>\n","      <td>-3.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-04</td>\n","      <td>108</td>\n","      <td>-5.9</td>\n","      <td>-8.0</td>\n","      <td>-3.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-05</td>\n","      <td>108</td>\n","      <td>-9.9</td>\n","      <td>-12.3</td>\n","      <td>-7.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-351b2b82-411d-469f-aa12-66606e54dac8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6bcffdab-aab0-4b1f-beed-9c5f1d03d41d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6bcffdab-aab0-4b1f-beed-9c5f1d03d41d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6bcffdab-aab0-4b1f-beed-9c5f1d03d41d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-351b2b82-411d-469f-aa12-66606e54dac8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-351b2b82-411d-469f-aa12-66606e54dac8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["seoul.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8ayAuqT8CFOV","executionInfo":{"status":"ok","timestamp":1689315438866,"user_tz":-540,"elapsed":307,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"65fefa17-74d1-4e25-f73b-59030e0877d1"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4018 entries, 0 to 4017\n","Data columns (total 5 columns):\n"," #   Column   Non-Null Count  Dtype         \n","---  ------   --------------  -----         \n"," 0   날짜       4018 non-null   datetime64[ns]\n"," 1   지점       4018 non-null   int64         \n"," 2   평균기온(℃)  4018 non-null   float64       \n"," 3   최저기온(℃)  4018 non-null   float64       \n"," 4   최고기온(℃)  4017 non-null   float64       \n","dtypes: datetime64[ns](1), float64(3), int64(1)\n","memory usage: 157.1 KB\n"]}]},{"cell_type":"code","source":["seoul.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"K8XdXipGCQAo","executionInfo":{"status":"ok","timestamp":1689315439160,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"6510f8d2-aa8b-4f60-d12c-0e0f5f226a27"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           지점      평균기온(℃)      최저기온(℃)      최고기온(℃)\n","count  4018.0  4018.000000  4018.000000  4017.000000\n","mean    108.0    12.965207     8.991015    17.699627\n","std       0.0    10.803691    10.932678    10.976719\n","min     108.0   -14.800000   -18.000000   -10.700000\n","25%     108.0     3.700000    -0.300000     8.200000\n","50%     108.0    14.250000     9.800000    19.600000\n","75%     108.0    22.800000    18.900000    27.400000\n","max     108.0    33.700000    30.300000    39.600000"],"text/html":["\n","\n","  <div id=\"df-c63cd327-83a1-4ac2-9656-1110df3de20d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>지점</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4018.0</td>\n","      <td>4018.000000</td>\n","      <td>4018.000000</td>\n","      <td>4017.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>108.0</td>\n","      <td>12.965207</td>\n","      <td>8.991015</td>\n","      <td>17.699627</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.0</td>\n","      <td>10.803691</td>\n","      <td>10.932678</td>\n","      <td>10.976719</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>108.0</td>\n","      <td>-14.800000</td>\n","      <td>-18.000000</td>\n","      <td>-10.700000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>108.0</td>\n","      <td>3.700000</td>\n","      <td>-0.300000</td>\n","      <td>8.200000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>108.0</td>\n","      <td>14.250000</td>\n","      <td>9.800000</td>\n","      <td>19.600000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>108.0</td>\n","      <td>22.800000</td>\n","      <td>18.900000</td>\n","      <td>27.400000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>108.0</td>\n","      <td>33.700000</td>\n","      <td>30.300000</td>\n","      <td>39.600000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c63cd327-83a1-4ac2-9656-1110df3de20d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cd70583f-6195-40d0-b76d-f1746f968b42\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd70583f-6195-40d0-b76d-f1746f968b42')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cd70583f-6195-40d0-b76d-f1746f968b42 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c63cd327-83a1-4ac2-9656-1110df3de20d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c63cd327-83a1-4ac2-9656-1110df3de20d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["seoul.drop('지점', axis=1, inplace=True)\n","seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"WLjwyaKrCTPI","executionInfo":{"status":"ok","timestamp":1689315439887,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"877d5ac1-1107-4179-92c2-98601ddbe101"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          날짜  평균기온(℃)  최저기온(℃)  최고기온(℃)\n","0 2010-01-01     -7.6    -12.7     -3.6\n","1 2010-01-02     -3.6     -7.4      0.2\n","2 2010-01-03     -6.8    -10.5     -3.2\n","3 2010-01-04     -5.9     -8.0     -3.4\n","4 2010-01-05     -9.9    -12.3     -7.0"],"text/html":["\n","\n","  <div id=\"df-5931956f-2d25-40d0-b5e5-72559a46db2f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>날짜</th>\n","      <th>평균기온(℃)</th>\n","      <th>최저기온(℃)</th>\n","      <th>최고기온(℃)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>-7.6</td>\n","      <td>-12.7</td>\n","      <td>-3.6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-02</td>\n","      <td>-3.6</td>\n","      <td>-7.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-03</td>\n","      <td>-6.8</td>\n","      <td>-10.5</td>\n","      <td>-3.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-04</td>\n","      <td>-5.9</td>\n","      <td>-8.0</td>\n","      <td>-3.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-05</td>\n","      <td>-9.9</td>\n","      <td>-12.3</td>\n","      <td>-7.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5931956f-2d25-40d0-b5e5-72559a46db2f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-47783211-08a9-416c-a40a-d03ba0dd00ef\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47783211-08a9-416c-a40a-d03ba0dd00ef')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-47783211-08a9-416c-a40a-d03ba0dd00ef button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5931956f-2d25-40d0-b5e5-72559a46db2f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5931956f-2d25-40d0-b5e5-72559a46db2f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["seoul.columns=['날짜', '평균기온', '최저기온', '최고기온']\n","seoul.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1-icRVjPCghC","executionInfo":{"status":"ok","timestamp":1689315506375,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"db7ea75d-e3e1-44ad-b8d7-58ddc0a40310"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['날짜', '평균기온', '최저기온', '최고기온'], dtype='object')"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["seoul.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z2KTbTrIDNf2","executionInfo":{"status":"ok","timestamp":1689315530559,"user_tz":-540,"elapsed":3,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"5f436f6e-719e-4491-dc31-b6b0b2242c60"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["날짜      0\n","평균기온    0\n","최저기온    0\n","최고기온    1\n","dtype: int64"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["seoul.dropna(subset=[\"최고기온\"], axis=0, inplace=True)\n","seoul.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bE2VpXX9DVQU","executionInfo":{"status":"ok","timestamp":1689315659654,"user_tz":-540,"elapsed":262,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"5c95d620-149d-4bfb-9b42-6a458feb491e"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["날짜      0\n","평균기온    0\n","최저기온    0\n","최고기온    0\n","dtype: int64"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["seoul['년도']=seoul['날짜'].dt.year\n","seoul.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XFhSTWwSD0sQ","executionInfo":{"status":"ok","timestamp":1689315698158,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"a16995cd-5081-4f5d-d93c-7b95a205928e"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          날짜  평균기온  최저기온  최고기온    년도\n","0 2010-01-01  -7.6 -12.7  -3.6  2010\n","1 2010-01-02  -3.6  -7.4   0.2  2010\n","2 2010-01-03  -6.8 -10.5  -3.2  2010\n","3 2010-01-04  -5.9  -8.0  -3.4  2010\n","4 2010-01-05  -9.9 -12.3  -7.0  2010"],"text/html":["\n","\n","  <div id=\"df-7db2249e-2e20-4d8e-b691-d9c49bbf798f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>날짜</th>\n","      <th>평균기온</th>\n","      <th>최저기온</th>\n","      <th>최고기온</th>\n","      <th>년도</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-01</td>\n","      <td>-7.6</td>\n","      <td>-12.7</td>\n","      <td>-3.6</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-02</td>\n","      <td>-3.6</td>\n","      <td>-7.4</td>\n","      <td>0.2</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-03</td>\n","      <td>-6.8</td>\n","      <td>-10.5</td>\n","      <td>-3.2</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-04</td>\n","      <td>-5.9</td>\n","      <td>-8.0</td>\n","      <td>-3.4</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-05</td>\n","      <td>-9.9</td>\n","      <td>-12.3</td>\n","      <td>-7.0</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7db2249e-2e20-4d8e-b691-d9c49bbf798f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-5619288a-c2a7-4ec7-938d-9d550c7207f8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5619288a-c2a7-4ec7-938d-9d550c7207f8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-5619288a-c2a7-4ec7-938d-9d550c7207f8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7db2249e-2e20-4d8e-b691-d9c49bbf798f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7db2249e-2e20-4d8e-b691-d9c49bbf798f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["from tables import conditions\n","\n","conditions=(seoul['날짜'].dt.month==8) & (seoul['날짜'].dt.day==15)\n","conditions\n","\n","seoul0815=seoul[conditions]\n","seoul0815"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"rHBisZtbD-KH","executionInfo":{"status":"ok","timestamp":1689316309458,"user_tz":-540,"elapsed":4,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"2c45b0fc-e4d7-4866-ce22-a4e142a6ff63"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             날짜  평균기온  최저기온  최고기온    년도\n","226  2010-08-15  26.6  24.6  30.2  2010\n","591  2011-08-15  24.5  22.9  26.9  2011\n","957  2012-08-15  23.7  22.4  27.1  2012\n","1322 2013-08-15  28.7  25.8  32.4  2013\n","1687 2014-08-15  24.9  20.9  29.6  2014\n","2052 2015-08-15  27.1  23.1  30.8  2015\n","2418 2016-08-15  29.1  25.8  34.0  2016\n","2783 2017-08-15  21.9  20.8  24.0  2017\n","3148 2018-08-15  31.7  28.3  38.0  2018\n","3513 2019-08-15  25.9  23.9  28.6  2019\n","3879 2020-08-15  26.1  25.0  27.0  2020"],"text/html":["\n","\n","  <div id=\"df-b677455c-3cac-4078-a1d5-e0c216fa026b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>날짜</th>\n","      <th>평균기온</th>\n","      <th>최저기온</th>\n","      <th>최고기온</th>\n","      <th>년도</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>226</th>\n","      <td>2010-08-15</td>\n","      <td>26.6</td>\n","      <td>24.6</td>\n","      <td>30.2</td>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>591</th>\n","      <td>2011-08-15</td>\n","      <td>24.5</td>\n","      <td>22.9</td>\n","      <td>26.9</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>957</th>\n","      <td>2012-08-15</td>\n","      <td>23.7</td>\n","      <td>22.4</td>\n","      <td>27.1</td>\n","      <td>2012</td>\n","    </tr>\n","    <tr>\n","      <th>1322</th>\n","      <td>2013-08-15</td>\n","      <td>28.7</td>\n","      <td>25.8</td>\n","      <td>32.4</td>\n","      <td>2013</td>\n","    </tr>\n","    <tr>\n","      <th>1687</th>\n","      <td>2014-08-15</td>\n","      <td>24.9</td>\n","      <td>20.9</td>\n","      <td>29.6</td>\n","      <td>2014</td>\n","    </tr>\n","    <tr>\n","      <th>2052</th>\n","      <td>2015-08-15</td>\n","      <td>27.1</td>\n","      <td>23.1</td>\n","      <td>30.8</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>2418</th>\n","      <td>2016-08-15</td>\n","      <td>29.1</td>\n","      <td>25.8</td>\n","      <td>34.0</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>2783</th>\n","      <td>2017-08-15</td>\n","      <td>21.9</td>\n","      <td>20.8</td>\n","      <td>24.0</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>3148</th>\n","      <td>2018-08-15</td>\n","      <td>31.7</td>\n","      <td>28.3</td>\n","      <td>38.0</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>3513</th>\n","      <td>2019-08-15</td>\n","      <td>25.9</td>\n","      <td>23.9</td>\n","      <td>28.6</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3879</th>\n","      <td>2020-08-15</td>\n","      <td>26.1</td>\n","      <td>25.0</td>\n","      <td>27.0</td>\n","      <td>2020</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b677455c-3cac-4078-a1d5-e0c216fa026b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2ec5dad6-628d-4a8e-8a59-a6e232706b96\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ec5dad6-628d-4a8e-8a59-a6e232706b96')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2ec5dad6-628d-4a8e-8a59-a6e232706b96 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b677455c-3cac-4078-a1d5-e0c216fa026b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b677455c-3cac-4078-a1d5-e0c216fa026b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["fig = plt.figure(figsize = (15, 7))\n","\n","x = seoul0815[['년도']]\n","y = seoul0815['평균기온']\n","\n","plt.xlabel('년도')\n","plt.ylabel('평균기온')\n","plt.scatter(x, y)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":839},"id":"1NKUc1cZGErx","executionInfo":{"status":"ok","timestamp":1689316490583,"user_tz":-540,"elapsed":5,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}},"outputId":"e40f230b-4b78-4162-a5ad-befb6e5effcd"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n","/usr/local/lib/python3.10/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n","  fig.canvas.print_figure(bytes_io, **kw)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression"],"metadata":{"id":"ZMq9tkU-G_PH","executionInfo":{"status":"ok","timestamp":1689316528156,"user_tz":-540,"elapsed":274,"user":{"displayName":"(호서대학교)오주희","userId":"13411961940056535669"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"x0mFH4w0HIxI"},"execution_count":null,"outputs":[]}]}